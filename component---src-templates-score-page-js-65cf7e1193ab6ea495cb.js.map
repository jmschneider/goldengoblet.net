{"version":3,"sources":["webpack:///./src/context/SpoilerContext.js","webpack:///./src/components/SpoilerButton.js","webpack:///./src/components/YoutubeLink.js","webpack:///./src/components/Score.js","webpack:///./src/components/ViewsyncLink.js","webpack:///./src/components/ScoreTable.js","webpack:///./src/components/ScoreFootnotes.js","webpack:///./src/components/ResultsRow.js","webpack:///./src/components/ResultsTable.js","webpack:///./src/components/ImageHeader.js","webpack:///./src/templates/ScorePage.js"],"names":["defaultState","showSpoilers","toggleSpoilers","SpolierContext","createContext","SpoilerProvider","children","useState","setShowSpoilers","useEffect","JSON","parse","localStorage","getItem","Provider","value","show","setItem","stringify","SpoilerButton","useContext","SpoilerContext","Button","variant","onClick","YoutubeLink","videoId","href","Score","day","allNotes","place","score","youtube","notes","noteIndex","findIndex","n","className","repeat","ViewsyncLink","data","youtubeLinks","map","node","days","filter","Boolean","length","link","join","ScoreTable","rows","push","key","scope","row","id","console","log","Table","name","channel","ScoreFootnotes","markdown","note","index","dangerouslySetInnerHTML","__html","RESULTS_LABELS","first","second","third","ResultsRow","ResultsTable","ImageHeader","alt","publicURL","childImageSharp","fluid","src","defaultProps","ScorePage","pageContext","scores","theme","Layout","currentGame","navButtons","SEO","title","gameImage","gameMarkdown","childMarkdownRemark","html","query"],"mappings":"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","file":"component---src-templates-score-page-js-65cf7e1193ab6ea495cb.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\"\n\nconst LOCAL_STORAGE_KEY = \"showSpoilers\"\n\nconst defaultState = {\n  showSpoilers: false,\n  toggleSpoilers: () => {},\n}\n\nconst SpolierContext = createContext(defaultState)\n\nexport const SpoilerProvider = ({ children }) => {\n  const [showSpoilers, setShowSpoilers] = useState(false)\n  useEffect(() => {\n    setShowSpoilers(\n      JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) ?? false\n    )\n  }, [])\n\n  const toggleSpoilers = () =>\n    setShowSpoilers(show => {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(!show))\n      return !show\n    })\n\n  return (\n    <SpolierContext.Provider value={{ showSpoilers, toggleSpoilers }}>\n      {children}\n    </SpolierContext.Provider>\n  )\n}\n\nexport default SpolierContext\n","import React, { useContext } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport SpoilerContext from \"../context/SpoilerContext\"\n\nconst SpoilerButton = () => {\n  const { showSpoilers, toggleSpoilers } = useContext(SpoilerContext)\n  return (\n    <Button variant=\"warning\" onClick={toggleSpoilers}>\n      {showSpoilers ? \"Hide\" : \"Show\"} Spoilers\n    </Button>\n  )\n}\n\nexport default SpoilerButton\n","import React from \"react\"\n\nconst YoutubeLink = ({ children, videoId }) => {\n  return videoId ? (\n    <a href={`https://www.youtube.com/watch?v=${videoId}`}>{children}</a>\n  ) : (\n    children\n  )\n}\n\nexport default YoutubeLink\n","import React, { useContext } from \"react\"\nimport SpoilerContext from \"../context/SpoilerContext\"\nimport YoutubeLink from \"./YoutubeLink\"\n\nconst Score = ({ day, allNotes }) => {\n  const { showSpoilers } = useContext(SpoilerContext)\n  const { place, score, youtube, notes } = day\n  const noteIndex = allNotes.findIndex(n => n === notes)\n\n  return (\n    <td>\n      <YoutubeLink videoId={youtube}>\n        {showSpoilers ? (\n          <span className={`comment ${place}`}>\n            {score || \"TBD\"}\n            {notes ? \" \" + \"*\".repeat(noteIndex + 1) : \"\"}\n          </span>\n        ) : (\n          <span>{youtube ? \"Watch\" : score ? \"Spoilers\" : \"TBD\"}</span>\n        )}\n      </YoutubeLink>\n    </td>\n  )\n}\n\nexport default Score\n","import React from \"react\"\n\nconst ViewsyncLink = ({ data, day }) => {\n  const youtubeLinks = data.map(node => node.days[day].youtube).filter(Boolean)\n\n  if (youtubeLinks.length > 1) {\n    return (\n      <a\n        href={`https://viewsync.net/watch?${youtubeLinks\n          .map(link => `v=${link}`)\n          .join(\"&\")}`}\n      >\n        {day + 1}\n      </a>\n    )\n  } else {\n    return day + 1\n  }\n}\n\nexport default ViewsyncLink\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nimport Score from \"./Score\";\nimport ViewsyncLink from \"./ViewsyncLink\";\n\nconst ScoreTable = ({ data, notes }) => {\n  let rows = [];\n  for (let day = 0; day < data[0].days.length; day++) {\n    rows.push(\n      <tr key={day}>\n        <th scope=\"row\">\n          <ViewsyncLink data={data} day={day} />\n        </th>\n        {data.map((row) => (\n          <Score key={row.id} day={row.days[day]} allNotes={notes} />\n        ))}\n      </tr>\n    );\n  }\n\n  console.log(data);\n\n  return (\n    <Table variant=\"dark\" className=\"results table-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Viewsync</th>\n          {data.map(({ id, name, youtube }) => (\n            <th scope=\"col\" key={id}>\n              {youtube ? <a href={`https://www.youtube.com/user/${youtube.channel}`}>{name}</a> : name}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  );\n};\n\nexport default ScoreTable;\n","import React from \"react\"\n\nconst ScoreFootnotes = ({ markdown, notes }) => (\n  <div id=\"footnote\">\n    {notes.map((note, index) => (\n      <div key={index}>\n        {\"*\".repeat(index + 1)} {note}\n      </div>\n    ))}\n    {markdown && (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: markdown,\n        }}\n      ></div>\n    )}\n  </div>\n)\n\nexport default ScoreFootnotes\n","import React, { useContext } from \"react\"\nimport SpoilerContext from \"../context/SpoilerContext\"\n\nconst RESULTS_LABELS = {\n  first: \"1st Finishes\",\n  second: \"2nd Finishes\",\n  third: \"3rd Finishes\",\n}\n\nconst ResultsRow = ({ data, place }) => {\n  const { showSpoilers } = useContext(SpoilerContext)\n  return (\n    <tr>\n      <th scope=\"row\">{RESULTS_LABELS[place]}</th>\n      {data.map(score => (\n        <td key={score.id} className={place}>\n          {showSpoilers\n            ? score.days.filter(day => day.place === place).length\n            : \"Spoilers\"}\n        </td>\n      ))}\n    </tr>\n  )\n}\n\nexport default ResultsRow\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ResultsRow from \"./ResultsRow\";\n\nconst ResultsTable = ({ data }) => {\n  return (\n    <Table variant=\"dark\" className=\"table-center\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Totals</th>\n          {data.map((score) => (\n            <th scope=\"col\" key={score.id}>\n              {score.name}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <ResultsRow data={data} place=\"third\" />\n        <ResultsRow data={data} place=\"second\" />\n        <ResultsRow data={data} place=\"first\" />\n      </tbody>\n    </Table>\n  );\n};\n\nexport default ResultsTable;\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nconst ImageHeader = ({ data, alt }) => {\n  const { publicURL, childImageSharp } = data\n\n  return (\n    <div className=\"text-center\" id=\"image-header\">\n      {childImageSharp ? (\n        <Img fluid={childImageSharp.fluid} alt={alt} />\n      ) : (\n        <img src={publicURL} className=\"img-fluid\" alt={alt} />\n      )}\n    </div>\n  )\n}\n\nImageHeader.defaultProps = {\n  alt: \"Game Logo\",\n}\n\nexport default ImageHeader\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { SpoilerProvider } from \"../context/SpoilerContext\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport SpoilerButton from \"../components/SpoilerButton\";\nimport ScoreTable from \"../components/ScoreTable\";\nimport ScoreFootnotes from \"../components/ScoreFootnotes\";\nimport ResultsTable from \"../components/ResultsTable\";\nimport ImageHeader from \"../components/ImageHeader\";\n\nexport default function ScorePage({ data, pageContext }) {\n  const { name, notes, scores, theme } = pageContext;\n\n  return (\n    <SpoilerProvider>\n      <Layout currentGame={name} theme={theme} navButtons={<SpoilerButton />}>\n        <SEO title={name} />\n        <ImageHeader data={data.gameImage} alt={`${name} Logo`} />\n        {scores ? (\n          <>\n            <h2 id=\"subtitle\" className=\"text-center text-nowrap my-2\">\n              Golden Goblet\n            </h2>\n            <ScoreTable data={scores} notes={notes} />\n            <ResultsTable data={scores} />\n            <ScoreFootnotes notes={notes} markdown={data?.gameMarkdown?.childMarkdownRemark?.html} />\n          </>\n        ) : (\n          <h2 id=\"subtitle\" className=\"text-center mt-5\">\n            Coming Soon\n          </h2>\n        )}\n      </Layout>\n    </SpoilerProvider>\n  );\n}\n\nexport const query = graphql`\n  query($image: String!, $slug: String!) {\n    gameMarkdown: file(name: { glob: $slug }) {\n      childMarkdownRemark {\n        html\n      }\n    }\n    gameImage: file(relativePath: { eq: $image }) {\n      publicURL\n    }\n  }\n`;\n\n// gameImage: file(relativePath: { eq: $image }) {\n//   publicURL\n//   childImageSharp {\n//     fluid(maxWidth: 840, maxHeight: 190) {\n//       ...GatsbyImageSharpFluid\n//     }\n//   }\n// }\n"],"sourceRoot":""}